library(ggthemes)
JHT2 <-function(){
theme_tuft()+
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank()) +
theme(plot.title=element_text(color=color.title, size=10)) +
theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
theme(axis.text.y=element_text(size=12,color=color.axis.text)) +
theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
library(ggplot2)
ggplot(data = DF, aes(x = x, y = y)) +geom_point() + theme_tufte() + geom_smooth(method="lm", color="red", linetype=2) + geom_rangeframe()
x <- rnorm(100, 50, 25)
y <- -0.3*x^2 + 25*x + 92 + rnorm(100, sd=300)
DF <- data.frame(cbind(x, y))
ggplot(data = DF, aes(x = x, y = y)) +geom_point() + theme_tufte() + geom_smooth(method="lm", color="red", linetype=2) + geom_rangeframe()
JHT2 <-function(){
theme_tuft()+
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank()) +
theme(plot.title=element_text(color=color.title, size=10)) +
theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
theme(axis.text.y=element_text(size=12,color=color.axis.text)) +
theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
?theme_tufte
JHT2 <-function(){
theme_tuft(base_size=10, ticks = FALSE)+
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank()) +
theme(plot.title=element_text(color=color.title, size=10)) +
theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
theme(axis.text.y=element_text(size=12,color=color.axis.text)) +
theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
ggplot(data = DF, aes(x = x, y = y)) +geom_point() + theme_tufte() + geom_smooth(method="lm", color="red", linetype=2) + geom_rangeframe()
JHT2 <-function(){
color.plot.area = "ivory"
color.background = "white"
color.grid.major = "black"
color.axis.text = "gray29"
color.axis.title = "gray29"
color.title = "gray29"
theme_tuft(base_size=10, ticks = FALSE)+
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank()) +
theme(plot.title=element_text(color=color.title, size=10)) +
theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
theme(axis.text.y=element_text(size=12,color=color.axis.text)) +
theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
ggplot(data = DF, aes(x = x, y = y)) +geom_point() + theme_tufte() + geom_smooth(method="lm", color="red", linetype=2) + geom_rangeframe()
ggplot(data = DF, aes(x = x, y = y)) +geom_point() + theme_tufte() + + stat_smooth(method="lm", formula = y ~ poly(x, 2), color="red", linetype=2) + geom_rangeframe()
ggplot(data = DF, aes(x = x, y = y)) +geom_point() + theme_tufte() + stat_smooth(method="lm", formula = y ~ poly(x, 2), color="red", linetype=2) + geom_rangeframe()
JHT <-function(){
color.plot.area = "ivory"
color.background = "white"
color.grid.major = "black"
color.axis.text = "gray29"
color.axis.title = "gray29"
color.title = "gray29"
theme_bw(base_size=9) +
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank()) +
theme(plot.title=element_text(color=color.title, size=10)) +
theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
theme(axis.text.y=element_text(size=12,color=color.axis.text)) +
theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
ggplot(data = DF, aes(x = x, y = y)) +geom_point() +JHT() + stat_smooth(method="lm", formula = y ~ poly(x, 2),
)
ggplot(data = DF, aes(x = x, y = y)) +geom_point() +JHT() + stat_smooth(method="lm", formula = y ~ poly(x, 2), color="red", linetype=2) + geom_rangeframe()
ggplot(data = DF, aes(x = x, y = y)) +geom_point() +JHT() + stat_smooth(method="lm", formula = y ~ poly(x, 2), color="red", linetype=1) + geom_rangeframe()
ggplot(data = DF, aes(x = x, y = y)) +geom_point() + theme_tufte() + stat_smooth(method="lm", formula = y ~ poly(x, 2), color="red", linetype=1) + geom_rangeframe()
JHT2 <-function(){
color.plot.area = "ivory"
color.background = "white"
color.grid.major = "black"
color.axis.text = "gray29"
color.axis.title = "gray29"
color.title = "gray29"
theme_tuft(base_size=10, ticks = FALSE)+
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank()) +
theme(plot.title=element_text(color=color.title, size=10)) +
theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
theme(axis.text.y=element_text(size=12,color=color.axis.text)) +
theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
JHT2 <-function(){
color.plot.area = "ivory"
color.background = "white"
color.grid.major = "black"
color.axis.text = "gray29"
color.axis.title = "gray29"
color.title = "gray29"
theme_tuft(base_size=10, ticks = FALSE) +
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank()) +
theme(plot.title=element_text(color=color.title, size=10)) +
theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
theme(axis.text.y=element_text(size=12,color=color.axis.text)) +
theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
ggplot(data = DF, aes(x = x, y = y)) +geom_point() + theme_tufte() + stat_smooth(method="lm", formula = y ~ poly(x, 2), color="red", linetype=1) + geom_rangeframe()
install.packages("RPostgreSQL")
library("RPostgreSQL")
install.packages(c("boot", "class", "cluster", "codetools", "colorspace", "devtools", "digest", "foreign", "ggplot2", "httr", "jsonlite", "KernSmooth", "knitr", "lattice", "manipulate", "MASS", "Matrix", "mgcv", "nlme", "nnet", "Rcpp", "RCurl", "rjson", "RJSONIO", "roxygen2", "rpart", "rstudioapi", "spatial", "survival"))
setwd("~/Documents/Graduate School/IS 607/607Project3/data visualization")
---
title: "Data Visualization"
author: "Honey, Vuthy, James, Sonya"
date: "March 24, 2015"
output: html_document
---
Data Visualization for the IS607 Project No. 2 | CUNY MSDA
Load data
```{r}
load("Awards.Data.RData")
#View(data.awards)
```
```{r, warning=FALSE, message=FALSE}
library(tidyr)
library(dplyr)
library(ggplot2)
library(knitr)
#library(grid)
library(gridExtra)
```
```{r, warning=FALSE, message=FALSE}
# Create BP, a dataframe showing only Best Picture Winners
BP <- filter(data.awards, category_name == "BEST PICTURE", won == 1)
# Create BP.AlsoNom, a dataframe showing what other categories the Best Picture Winners were NOMINATED for
BP.AlsoNom <- left_join(BP, data.awards, by = "movie_name")
BP.AlsoNom <- filter(BP.AlsoNom, category_name.y != "BEST PICTURE")
BP.AlsoNom <- select(BP.AlsoNom, category_name.y)
BP.AlsoNom <- count(BP.AlsoNom, category_name.y)
BP.AlsoNom <- arrange(BP.AlsoNom, desc(n))
# Create BP.AlsoWon, a dataframe showing what other categories the Best Picture winners WON
data.awards.won <- filter(data.awards, won == 1)
BP.AlsoWon <- left_join(BP, data.awards.won, by = "movie_name")
BP.AlsoWon <- filter(BP.AlsoWon, category_name.y != "BEST PICTURE")
BP.AlsoWon <- select(BP.AlsoWon, category_name.y)
BP.AlsoWon <- count(BP.AlsoWon, category_name.y)
BP.AlsoWon <- arrange(BP.AlsoWon, desc(n))
kable(cbind(BP.AlsoNom, BP.AlsoWon),
col.names = c("Category Nominations", "Count", "Category Winners", "Count"))
```
#Figure 1
Answers question "Each year's best picture winner was also nominated in: Editing Category X% of the time,
Cinematography Y% of the time, Best Score Z% of the time... visualized as a bar chart in decending order
```{r}
nom <- ggplot(data = BP.AlsoNom, aes(x = reorder(category_name.y, n), y=n)) + geom_bar(stat="identity") + coord_flip() + labs(x = "Category", y = "Nominations")
win <- ggplot(data = BP.AlsoWon, aes(x = reorder(category_name.y, n), y=n)) + geom_bar(stat="identity") + coord_flip() + labs(x = "Category", y = "Wins") + ylim(0, 80)
grid.arrange(nom, win, ncol=1)
```
```{r}
#asdf
```
data.awards
str(data.awards)
?length
length(BP)
BP
length(BP$movie_name)
str(BP.AlsoNom)
(length(BP$movie_name)/length(BP.AlsoNom[1]))
BP.AlsoNom[1]
length(BP.AlsoNom[1])
length(BP.AlsoNom$category_name.y)
BP.AlsoNom$category_name.y
BP.AlsoNom$n
BP.AlsoNom
BP.AlsoNom$category_name.y
BP.AlsoNom$n
length(BP.AlsoNom$n)
str(BP.AlsoNom)
BP.AlsoNom
